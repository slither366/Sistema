package com.app.form.adm;

import com.app.config.Configuracion;
import com.app.config.MensajeSistema;
import com.app.form.Especiales.frm_Padre;
import static com.app.form.Especiales.frm_Padre.EMP_CODIGO;
import com.app.form.Especiales.frm_Padre.Metodos;
import static com.app.form.Especiales.frm_Padre.getConexion;
import java.awt.event.ActionEvent;

/**
 *
 * @author dramosort
 */
public final class Perfiles extends frm_Padre implements Metodos {

    public Perfiles(int cod_ventana) {
        initComponents();
        this.setName("Perfiles");
        this.txtCodigo.setUsarEmpresa(true);
        this.txtCodigo.setUsarEmpresa(false);
        this.txtCodigo.setBdTabla("acc_perfiles");
        this.txtCodigo.setBdCodigo("Perf_Codigo");
        this.txtCodigo.setBdDescrip("Perf_Descrip");
        this.txtCodigo.setBdTitulo("Perfiles");

        this.txtCod_Sucursal.setUsarEmpresa(true);
        this.txtCod_Sucursal.setUsarSucursal(false);
        this.txtCod_Sucursal.setBdTabla("adm_sucursales");
        this.txtCod_Sucursal.setBdCodigo("Suc_Codigo");
        this.txtCod_Sucursal.setBdDescrip("denominacion");
        this.txtCod_Sucursal.setBdTitulo("Sucursales");

        this.txtNom_Sucursal.setEditable(false);
        this.txtNom_Sucursal.setEnMayuscula(true);
        this.txtComentario.setEnMayuscula(true);
        this.pnlTitulo.setTextTitulo("Mantenimiento de Perfiles...");
        this.pnlABM.addListener(this);
        this.getPermisos(cod_ventana);
        this.Inicializar();
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        String Orden = e.getActionCommand();
        if (Orden.compareTo("btn1") == 0) {
            Agregar();
        } else if (Orden.compareTo("btn2") == 0) {
            Editar('M');
        } else if (Orden.compareTo("btn3") == 0) {
            Editar('E');
        } else if (Orden.compareTo("btn4") == 0) {
            Grabar();
        } else if (Orden.compareTo("btn5") == 0) {
            if (MensajeSistema.Cancelar(this)) {
                this.Inicializar();
            }
        } else if (Orden.compareTo("btn6") == 0) {
            Salir(this);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pnlTitulo = new com.app.paleta.panelTitulo();
        pnlDatos = new com.app.paleta.panel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtCodigo = new com.app.paleta.txtCodigo();
        txtDescripcion = new com.app.paleta.txtTexto();
        txtComentario = new com.app.paleta.txtTexto();
        txtCod_Sucursal = new com.app.paleta.txtCodigo();
        txtNom_Sucursal = new com.app.paleta.txtTexto();
        pnlABM = new com.app.botones.pnlABM();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Codigo:");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Descripci√≥n:");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Comentario:");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Sucursal:");

        txtCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoActionPerformed(evt);
            }
        });

        txtDescripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescripcionActionPerformed(evt);
            }
        });

        txtComentario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtComentarioActionPerformed(evt);
            }
        });

        txtCod_Sucursal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCod_SucursalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlDatosLayout = new javax.swing.GroupLayout(pnlDatos);
        pnlDatos.setLayout(pnlDatosLayout);
        pnlDatosLayout.setHorizontalGroup(
            pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDatosLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDescripcion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlDatosLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtComentario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlDatosLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnlDatosLayout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCod_Sucursal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNom_Sucursal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlDatosLayout.setVerticalGroup(
            pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtComentario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtCod_Sucursal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNom_Sucursal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlDatos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(pnlABM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlDatos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlABM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoActionPerformed
        int valor = this.txtCodigo.verificarVacioConMsj();
        if (valor == 0) {
            this.txtCodigo.setEnabled(false);
            if (this.txtCodigo.getOperacion() == 'M' || this.txtCodigo.getOperacion() == 'E') {
                this.RecuperarDatos(this.txtCodigo.getText());
            } else {
                this.txtDescripcion.grabFocus();
            }
        } else if (valor == 1) {
            this.Inicializar();
        }
    }//GEN-LAST:event_txtCodigoActionPerformed

    private void txtDescripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescripcionActionPerformed
        int valor = this.txtDescripcion.verificarVacioConMsj();
        if (valor == 0) {
            this.txtComentario.setEnabled(true);
            this.txtComentario.grabFocus();
        } else if (valor == 1) {
            this.Inicializar();
        }
    }//GEN-LAST:event_txtDescripcionActionPerformed

    private void txtComentarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtComentarioActionPerformed
        int valor = this.txtComentario.verificarVacioConMsj();
        if (valor == 0) {
            this.txtCod_Sucursal.setEnabled(true);
            this.txtCod_Sucursal.grabFocus();
        } else if (valor == 1) {
            this.Inicializar();
        }
    }//GEN-LAST:event_txtComentarioActionPerformed

    private void txtCod_SucursalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCod_SucursalActionPerformed
        if (this.txtCod_Sucursal.getCodigo() == 0) {
            this.txtCod_Sucursal.setText("0");
            this.txtNom_Sucursal.setText("Todas las sucursales");
            this.pnlABM.btnGrabar.setEnabled(true);
            this.pnlABM.btnGrabar.grabFocus();
        } else {
            String rs = this.txtCod_Sucursal.getDescripcion();
            if (rs != null) {
                this.txtNom_Sucursal.setText(rs);
                this.pnlABM.btnGrabar.setEnabled(true);
                this.pnlABM.btnGrabar.grabFocus();
            } else {
                MensajeSistema.ConsultaSQLVacio(this);
                this.txtCod_Sucursal.setText("");
                this.txtNom_Sucursal.setText("");
                this.txtCod_Sucursal.grabFocus();
            }
        }
    }//GEN-LAST:event_txtCod_SucursalActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private com.app.botones.pnlABM pnlABM;
    private com.app.paleta.panel pnlDatos;
    private com.app.paleta.panelTitulo pnlTitulo;
    private com.app.paleta.txtCodigo txtCod_Sucursal;
    private com.app.paleta.txtCodigo txtCodigo;
    private com.app.paleta.txtTexto txtComentario;
    private com.app.paleta.txtTexto txtDescripcion;
    private com.app.paleta.txtTexto txtNom_Sucursal;
    // End of variables declaration//GEN-END:variables

    @Override
    public void Inicializar() {
        this.pnlDatos.setTextNull();
        this.pnlDatos.setEnabled(false);
        this.pnlABM.btnNuevo.setEnabled(Agrega_OK);
        this.pnlABM.btnModificar.setEnabled(Modifica_OK);
        this.pnlABM.btnBorrar.setEnabled(Borra_OK);
        this.pnlABM.btnGrabar.setEnabled(false);
        this.pnlABM.btnCancelar.setEnabled(false);
        this.pnlABM.btnSalir.setEnabled(true);
        if (this.pnlABM.btnNuevo.isEnabled()) {
            this.pnlABM.btnNuevo.grabFocus();
        } else if (this.pnlABM.btnModificar.isEnabled()) {
            this.pnlABM.btnModificar.grabFocus();
        } else if (this.pnlABM.btnBorrar.isEnabled()) {
            this.pnlABM.btnBorrar.grabFocus();
        } else {
            this.pnlABM.btnSalir.grabFocus();
        }
    }

    @Override
    public void Grabar() {
        String xide = this.txtCodigo.getText();
        String xdes = this.txtDescripcion.getText().trim();
        String xCom = this.txtComentario.getText().trim();
        String xfor = this.txtCod_Sucursal.getCodigo() == 0 ? "null" : this.txtCod_Sucursal.getText();
        if (this.txtCodigo.getOperacion() == 'A') {
            getConexion.insertar(this.txtCodigo.getBdTabla(),
                    new String[]{EMP_CODIGO, txtCodigo.getBdCodigo(), this.txtCodigo.getBdDescrip(), "comentario", this.txtCod_Sucursal.getBdCodigo()},
                    new String[]{Configuracion.getEMP_CODIGO(), xide, xdes, xCom, xfor});
        } else if (this.txtCodigo.getOperacion() == 'M') {
            getConexion.actualizar(this.txtCodigo.getBdTabla(),
                    new String[]{this.txtCodigo.getBdDescrip(), "comentario", this.txtCod_Sucursal.getBdCodigo()},
                    new String[]{xdes, xCom, xfor},
                    new String[]{EMP_CODIGO, txtCodigo.getBdCodigo()},
                    new String[]{Configuracion.getEMP_CODIGO(), xide});
        }
        Inicializar();
    }

    @Override
    public void Agregar() {
        String[] campos = new String[]{EMP_CODIGO};
        String[] valores = new String[]{Configuracion.getEMP_CODIGO()};
        if (getConexion.autoNumerico(this.txtCodigo.getBdTabla(), txtCodigo.getBdCodigo(), campos, valores, this.txtCodigo)) {
            this.pnlABM.ModoEdicion(false);
            this.pnlABM.btnGrabar.setEnabled(false);
            this.txtDescripcion.setEnabled(true);
            this.txtCodigo.setOperacion('A');
            this.txtDescripcion.grabFocus();
        } else {
            Inicializar();
        }
    }

    @Override
    public void Editar(char c) {
        this.txtCodigo.setOperacion(c);
        this.pnlABM.ModoEdicion(false);
        this.txtCodigo.setEnabled(true);
        this.pnlABM.btnGrabar.setEnabled(false);
        this.txtCodigo.grabFocus();
    }

    @Override
    public void RecuperarDatos(String codigo) {
        String[] resultado = getConexion.getDescripciones("vst_" + this.txtCodigo.getBdTabla(),
                new String[]{this.txtCodigo.getBdDescrip(), "comentario", txtCod_Sucursal.getBdCodigo(), txtCod_Sucursal.getBdDescrip()},
                new String[]{EMP_CODIGO, txtCodigo.getBdCodigo()},
                new String[]{Configuracion.getEMP_CODIGO(), codigo});
        if (resultado[0] != null) {
            txtDescripcion.setText(resultado[0]);
            txtComentario.setText(resultado[1]);
            txtCod_Sucursal.setText(resultado[2]);
            txtNom_Sucursal.setText(resultado[3]);
            if (this.txtCodigo.getOperacion() == 'E') {
                this.txtCodigo.Borrar();
                Inicializar();
            } else {
                this.txtDescripcion.setEnabled(true);
                this.txtDescripcion.grabFocus();
            }
        } else {
            if (MensajeSistema.ConsultaSQLVacio(this)) {
                this.txtCodigo.setText("");
                this.txtCodigo.setEnabled(true);
                this.txtCodigo.grabFocus();
            } else {
                this.Inicializar();
            }
        }
    }
}
