package com.app.form.Especiales;

import com.app.clases.ClaseBotones;
import com.app.clases.ClaseTable;
import com.app.clases.ClaseTeclas;
import com.app.config.Configuracion;
import com.app.config.ConsultaSQL;
import com.app.config.MensajeSistema;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author diego
 */
public class Mantenimiento_Permisos extends frm_Padre {

    private final DefaultTableModel ModeloPermisos, ModeloMenus;
    private final String[] vacio = {};
    private String Cod_Sucursal, Cod_Perfil;
    private boolean v_autorizado = false, v_agregar = false, v_modificar = false;
    private boolean v_borrar = false, v_listar = false;
    private boolean v_todos = false;

    public Mantenimiento_Permisos() {
        initComponents();
        this.setName("Mant_Permisos");
        ClaseBotones.botonesABMKeyPressed(btnNuevo, btnModificar, btnBorrar, btnGrabar, btnCancelar, btnSalir);
        this.ModeloPermisos = (DefaultTableModel) jTablePermisos.getModel();
        this.ModeloMenus = (DefaultTableModel) jTableMenus.getModel();
        jTablePermisos.setAncho(new int[]{0, 1, 2, 3, 4, 5, 6}, new int[]{60, 260, 60, 50, 50, 50, 50});
        jTableMenus.setAncho(new int[]{0, 1, 2}, new int[]{60, 300, 60});
        this.Inicializar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pnlTitulo = new javax.swing.JPanel();
        textTitulo = new javax.swing.JLabel();
        jPanelPermisos = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButtonAutorizado = new javax.swing.JButton();
        jButtonAgregar = new javax.swing.JButton();
        jButtonModificar = new javax.swing.JButton();
        jButtonBorrar = new javax.swing.JButton();
        jButtonListar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTablePermisos = new com.app.paleta.tabla();
        jLabel3 = new javax.swing.JLabel();
        jComboSucursal = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jComboPerfil = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jButtonTodos = new javax.swing.JButton();
        jButtonPasar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableMenus = new com.app.paleta.tabla();
        jPanelBotones = new javax.swing.JPanel();
        btnNuevo = new com.app.botones.btnNuevo();
        btnModificar = new com.app.botones.btnEditar();
        btnBorrar = new com.app.botones.btnBorrar();
        btnGrabar = new com.app.botones.btnGrabar();
        btnCancelar = new com.app.botones.btnCancelar();
        btnSalir = new com.app.botones.btnSalir();

        pnlTitulo.setBackground(new java.awt.Color(204, 204, 204));
        pnlTitulo.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlTitulo.setMaximumSize(new java.awt.Dimension(486, 60));
        pnlTitulo.setMinimumSize(new java.awt.Dimension(486, 60));
        pnlTitulo.setName(""); // NOI18N

        textTitulo.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        textTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        textTitulo.setText("Mantenimiento de Permisos...");

        javax.swing.GroupLayout pnlTituloLayout = new javax.swing.GroupLayout(pnlTitulo);
        pnlTitulo.setLayout(pnlTituloLayout);
        pnlTituloLayout.setHorizontalGroup(
            pnlTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTituloLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlTituloLayout.setVerticalGroup(
            pnlTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTituloLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanelPermisos.setBorder(javax.swing.BorderFactory.createTitledBorder("Permisos"));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Todos:");

        jButtonAutorizado.setText("Autorizado");
        jButtonAutorizado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAutorizadoActionPerformed(evt);
            }
        });

        jButtonAgregar.setText("Agregar");
        jButtonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgregarActionPerformed(evt);
            }
        });

        jButtonModificar.setText("Modificar");
        jButtonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarActionPerformed(evt);
            }
        });

        jButtonBorrar.setText("Borrar");
        jButtonBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBorrarActionPerformed(evt);
            }
        });

        jButtonListar.setText("Listar");
        jButtonListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonListarActionPerformed(evt);
            }
        });

        jTablePermisos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Menú", "Autorizado", "Agregar", "Modificar", "Borrar", "Listar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTablePermisos);

        javax.swing.GroupLayout jPanelPermisosLayout = new javax.swing.GroupLayout(jPanelPermisos);
        jPanelPermisos.setLayout(jPanelPermisosLayout);
        jPanelPermisosLayout.setHorizontalGroup(
            jPanelPermisosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPermisosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPermisosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanelPermisosLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonAutorizado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonAgregar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonModificar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonBorrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonListar, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanelPermisosLayout.setVerticalGroup(
            jPanelPermisosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPermisosLayout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelPermisosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAutorizado)
                    .addComponent(jButtonAgregar)
                    .addComponent(jButtonModificar)
                    .addComponent(jButtonBorrar)
                    .addComponent(jButtonListar)
                    .addComponent(jLabel1))
                .addContainerGap())
        );

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Sucursales...");

        jComboSucursal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboSucursalFocusGained(evt);
            }
        });
        jComboSucursal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboSucursalKeyPressed(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Perfiles...");

        jComboPerfil.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboPerfilFocusGained(evt);
            }
        });
        jComboPerfil.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboPerfilKeyPressed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Menús"));

        jButtonTodos.setText("Todos");
        jButtonTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTodosActionPerformed(evt);
            }
        });

        jButtonPasar.setText("<< Pasar");
        jButtonPasar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPasarActionPerformed(evt);
            }
        });

        jTableMenus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Descripción", "Marcar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableMenus);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jButtonPasar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonTodos))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 442, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonTodos)
                    .addComponent(jButtonPasar))
                .addContainerGap())
        );

        jPanelBotones.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        btnGrabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrabarActionPerformed(evt);
            }
        });

        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnSalir.setMaximumSize(new java.awt.Dimension(90, 30));
        btnSalir.setMinimumSize(new java.awt.Dimension(90, 30));
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelBotonesLayout = new javax.swing.GroupLayout(jPanelBotones);
        jPanelBotones.setLayout(jPanelBotonesLayout);
        jPanelBotonesLayout.setHorizontalGroup(
            jPanelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBotonesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGrabar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelBotonesLayout.setVerticalGroup(
            jPanelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBotonesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGrabar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(pnlTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboSucursal, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboPerfil, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jPanelPermisos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanelBotones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jComboSucursal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jComboPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelPermisos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelBotones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboSucursalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboSucursalKeyPressed
        if (evt.getKeyCode() == ClaseTeclas.VK_ENTER()) {
            if (this.jComboSucursal.getSelectedIndex() == 0) {
                MensajeSistema.MensajeVarios(this, "Seleccione un registro y vuelva intentar...", MensajeSistema.ERROR_MESSAGE());
                this.jComboSucursal.grabFocus();
            } else {
                claseSucursal suc = (claseSucursal) this.jComboSucursal.getSelectedItem();
                this.Cod_Sucursal = suc.getCodigo();
                if (this.CargarPerfil()) {
                    this.jComboPerfil.setEnabled(true);
                    this.jComboPerfil.grabFocus();
                } else {
                    this.Inicializar();
                }
            }
        }
    }//GEN-LAST:event_jComboSucursalKeyPressed

    private void jComboPerfilKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboPerfilKeyPressed
        if (evt.getKeyCode() == ClaseTeclas.VK_ENTER()) {
            if (this.jComboPerfil.getSelectedIndex() == 0) {
                MensajeSistema.MensajeVarios(this, "Seleccione un registro y vuelva intentar...", MensajeSistema.ERROR_MESSAGE());
                this.jComboPerfil.grabFocus();
            } else {
                clasePerfiles per = (clasePerfiles) this.jComboPerfil.getSelectedItem();
                this.Cod_Perfil = per.getCodigo();
                boolean existe = true;
                if (this.CargarPermisos()) {
                    if (operacion == 'A') {
                        MensajeSistema.MensajeVarios(this, "Ya existen permisos para el parametro ingresado...", MensajeSistema.INFORMATION_MESSAGE());
                        operacion = 'M';
                    }
                } else {
                    if (operacion == 'M' || operacion == 'E') {
                        MensajeSistema.ConsultaSQLVacio(this);
                        existe = false;
                    }
                }

                this.CargarMenus();
                if (existe) {
                    if (operacion == 'E') {
                        this.Borrar();
                    } else {
                        this.jButtonAutorizado.setEnabled(true);
                        this.jButtonAgregar.setEnabled(true);
                        this.jButtonModificar.setEnabled(true);
                        this.jButtonBorrar.setEnabled(true);
                        this.jButtonListar.setEnabled(true);
                        this.jButtonPasar.setEnabled(true);
                        this.jButtonTodos.setEnabled(true);
                        this.btnGrabar.setEnabled(true);
                        this.jButtonAutorizado.grabFocus();
                    }
                } else {
                    this.Inicializar();
                }
            }
        }
    }//GEN-LAST:event_jComboPerfilKeyPressed

    private void jComboSucursalFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboSucursalFocusGained
        this.jComboSucursal.setPopupVisible(true);
    }//GEN-LAST:event_jComboSucursalFocusGained

    private void jComboPerfilFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboPerfilFocusGained
        this.jComboPerfil.setPopupVisible(true);
    }//GEN-LAST:event_jComboPerfilFocusGained

    private void jButtonAutorizadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAutorizadoActionPerformed
        for (int i = 0; i < ModeloPermisos.getRowCount(); i++) {
            this.ModeloPermisos.setValueAt(!v_autorizado, i, 2);
        }
        v_autorizado = !v_autorizado;
    }//GEN-LAST:event_jButtonAutorizadoActionPerformed

    private void jButtonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAgregarActionPerformed
        for (int i = 0; i < ModeloPermisos.getRowCount(); i++) {
            this.ModeloPermisos.setValueAt(!v_agregar, i, 3);
        }
        v_agregar = !v_agregar;
    }//GEN-LAST:event_jButtonAgregarActionPerformed

    private void jButtonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarActionPerformed
        for (int i = 0; i < ModeloPermisos.getRowCount(); i++) {
            this.ModeloPermisos.setValueAt(!v_modificar, i, 4);
        }
        v_modificar = !v_modificar;
    }//GEN-LAST:event_jButtonModificarActionPerformed

    private void jButtonBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBorrarActionPerformed
        for (int i = 0; i < ModeloPermisos.getRowCount(); i++) {
            this.ModeloPermisos.setValueAt(!v_borrar, i, 5);
        }
        v_borrar = !v_borrar;
    }//GEN-LAST:event_jButtonBorrarActionPerformed

    private void jButtonTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTodosActionPerformed
        for (int i = 0; i < ModeloMenus.getRowCount(); i++) {
            this.ModeloMenus.setValueAt(!v_todos, i, 2);
        }
        v_todos = !v_todos;
    }//GEN-LAST:event_jButtonTodosActionPerformed

    private void jButtonListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonListarActionPerformed
        for (int i = 0; i < ModeloPermisos.getRowCount(); i++) {
            this.ModeloPermisos.setValueAt(!v_listar, i, 6);
        }
        v_listar = !v_listar;
    }//GEN-LAST:event_jButtonListarActionPerformed

    private void jButtonPasarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPasarActionPerformed
        this.pasarMenus();
    }//GEN-LAST:event_jButtonPasarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        this.Agregar();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        this.Editar('M');
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        this.Editar('E');
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void btnGrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrabarActionPerformed
        this.Grabar();
    }//GEN-LAST:event_btnGrabarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.Cancelar();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        Salir(this);
    }//GEN-LAST:event_btnSalirActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.app.botones.btnBorrar btnBorrar;
    private com.app.botones.btnCancelar btnCancelar;
    private com.app.botones.btnGrabar btnGrabar;
    private com.app.botones.btnEditar btnModificar;
    private com.app.botones.btnNuevo btnNuevo;
    private com.app.botones.btnSalir btnSalir;
    private javax.swing.JButton jButtonAgregar;
    private javax.swing.JButton jButtonAutorizado;
    private javax.swing.JButton jButtonBorrar;
    private javax.swing.JButton jButtonListar;
    private javax.swing.JButton jButtonModificar;
    private javax.swing.JButton jButtonPasar;
    private javax.swing.JButton jButtonTodos;
    private javax.swing.JComboBox jComboPerfil;
    private javax.swing.JComboBox jComboSucursal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelBotones;
    private javax.swing.JPanel jPanelPermisos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private com.app.paleta.tabla jTableMenus;
    private com.app.paleta.tabla jTablePermisos;
    private javax.swing.JPanel pnlTitulo;
    private javax.swing.JLabel textTitulo;
    // End of variables declaration//GEN-END:variables

    private void Inicializar() {
        this.btnNuevo.setEnabled(true);
        this.btnModificar.setEnabled(true);
        this.btnBorrar.setEnabled(true);
        this.btnGrabar.setEnabled(false);
        this.btnCancelar.setEnabled(false);
        this.btnSalir.setEnabled(true);
        this.ModeloPermisos.setRowCount(0);
        this.ModeloMenus.setRowCount(0);
        this.jComboSucursal.removeAllItems();
        this.jComboPerfil.removeAllItems();
        this.jComboSucursal.setEnabled(false);
        this.jComboPerfil.setEnabled(false);
        ClaseBotones.modoEdicionABM(btnNuevo, btnModificar, btnBorrar, btnGrabar, btnCancelar, btnSalir, true);
        this.jButtonAutorizado.setEnabled(false);
        this.jButtonAgregar.setEnabled(false);
        this.jButtonModificar.setEnabled(false);
        this.jButtonBorrar.setEnabled(false);
        this.jButtonListar.setEnabled(false);
        this.jButtonPasar.setEnabled(false);
        this.jButtonTodos.setEnabled(false);
        this.operacion = 'x';
        this.Cod_Sucursal = "";
        this.Cod_Perfil = "";
        this.btnNuevo.grabFocus();
    }

    private void Grabar() {
        if (MensajeSistema.Guardar(this)) {
            int cantidadRow = this.ModeloPermisos.getRowCount();
            for (int i = cantidadRow - 1; i >= 0; i--) {
                if ("false".equals(this.ModeloPermisos.getValueAt(i, 2).toString())) {
                    ClaseTable.removeRowjTable(jTablePermisos, i);
                }
            }
            cantidadRow = this.ModeloPermisos.getRowCount();
            this.getConexion.Begin();
            boolean exito = true;
            if (operacion == 'M') {
                exito = this.getConexion.eliminar("Acc_Principal",
                        new String[]{EMP_CODIGO, SUC_CODIGO, "Perf_Codigo"},
                        new String[]{Configuracion.getEMP_CODIGO(), this.Cod_Sucursal, this.Cod_Perfil});
            }
            if (exito) {
                String[][] registros = new String[cantidadRow][9];
//                for (int i = 0; i < cantidadRow; i++) {
//                    exito = this.getConexion.insertar("acc_principal",
//                            new String[]{"cod_empresa", "cod_sucursal", "cod_perfil", "cod_menu",
//                                "autorizado_ok", "agrega_ok", "modifica_ok", "borra_ok", "listar_ok"},
//                            new String[]{Configuracion.getCOD_EMPRESA(), this.Cod_Sucursal, this.Cod_Perfil,
//                                this.ModeloPermisos.getValueAt(i, 0).toString(),
//                                "true".equals(this.ModeloPermisos.getValueAt(i, 2).toString()) ? "1" : "0",
//                                "true".equals(this.ModeloPermisos.getValueAt(i, 3).toString()) ? "1" : "0",
//                                "true".equals(this.ModeloPermisos.getValueAt(i, 4).toString()) ? "1" : "0",
//                                "true".equals(this.ModeloPermisos.getValueAt(i, 5).toString()) ? "1" : "0",
//                                "true".equals(this.ModeloPermisos.getValueAt(i, 6).toString()) ? "1" : "0"});
//                    if (exito == false) {
//                        this.getConexion.RollBack();
//                        break;
//                    }
//                }
                for (int i = 0; i < cantidadRow; i++) {
                    registros[i][0] = Configuracion.getEMP_CODIGO();
                    registros[i][1] = this.Cod_Sucursal;
                    registros[i][2] = this.Cod_Perfil;
                    registros[i][3] = this.ModeloPermisos.getValueAt(i, 0).toString();
                    registros[i][4] = "true".equals(this.ModeloPermisos.getValueAt(i, 2).toString()) ? "1" : "0";
                    registros[i][5] = "true".equals(this.ModeloPermisos.getValueAt(i, 3).toString()) ? "1" : "0";
                    registros[i][6] = "true".equals(this.ModeloPermisos.getValueAt(i, 4).toString()) ? "1" : "0";
                    registros[i][7] = "true".equals(this.ModeloPermisos.getValueAt(i, 5).toString()) ? "1" : "0";
                    registros[i][8] = "true".equals(this.ModeloPermisos.getValueAt(i, 6).toString()) ? "1" : "0";

                }
                if (this.getConexion.insertar("Acc_Principal",
                        new String[]{EMP_CODIGO, SUC_CODIGO, "Perf_Codigo", "Men_Codigo",
                            "autorizado_ok", "agrega_ok", "modifica_ok", "borra_ok", "listar_ok"},
                        registros, cantidadRow, 9) == false) {
                    this.getConexion.RollBack();
                }

            }
            this.getConexion.Commit();
        }
        this.Inicializar();
    }

    private void Agregar() {
        ClaseBotones.modoEdicionABM(btnNuevo, btnModificar, btnBorrar, btnGrabar, btnCancelar, btnSalir, false);
        this.btnGrabar.setEnabled(false);
        if (this.CargarSucursal()) {
            this.operacion = 'A';
            this.jComboSucursal.setEnabled(true);
            this.jComboSucursal.grabFocus();
        } else {
            this.Inicializar();
        }
    }

    private void Borrar() {
        if (MensajeSistema.Eliminar(this)) {
            this.getConexion.eliminar("Acc_Principal",
                    new String[]{EMP_CODIGO, SUC_CODIGO, "Perf_Codigo"},
                    new String[]{Configuracion.getEMP_CODIGO(), this.Cod_Sucursal, this.Cod_Perfil});
        }
        this.Inicializar();
    }

    private void Editar(char c) {
        this.operacion = c;
        this.jComboSucursal.setEnabled(true);
        ClaseBotones.modoEdicionABM(btnNuevo, btnModificar, btnBorrar, btnGrabar, btnCancelar, btnSalir, false);
        this.btnGrabar.setEnabled(false);
        if (this.CargarSucursal()) {
            this.jComboSucursal.grabFocus();
        } else {
            this.Inicializar();
        }
    }

    private void Cancelar() {
        if (MensajeSistema.Cancelar(this)) {
            this.Inicializar();
        }
    }

    private boolean CargarSucursal() {
        jComboSucursal.removeAllItems();
        ArrayList<claseSucursal> lista = ObtenerListaSucursal();
        if (lista.size() > 0) {
            jComboSucursal.addItem("Seleccione...");
            for (claseSucursal lista1 : lista) {
                jComboSucursal.addItem(new claseSucursal(lista1.getCodigo(), lista1.getDescripcion()));
            }
            return true;
        }
        return false;
    }

    private boolean CargarPerfil() {
        jComboPerfil.removeAllItems();
        ArrayList<clasePerfiles> lista = ObtenerListaPerfil();
        if (lista.size() > 0) {
            jComboPerfil.addItem("Seleccione...");
            for (clasePerfiles lista1 : lista) {
                jComboPerfil.addItem(new clasePerfiles(lista1.getCodigo(), lista1.getDescripcion()));
            }
            return true;
        }
        return false;
    }

    private boolean CargarPermisos() {
        this.ModeloPermisos.setRowCount(0);
        String consulta = ConsultaSQL.getSelect("vst_Acc_Principal",
                new String[]{"Men_Codigo", "Men_Descrip", "autorizado_ok", "agrega_ok", "modifica_ok", "borra_ok", "listar_ok"},
                vacio,
                new String[]{EMP_CODIGO, SUC_CODIGO, "Perf_Codigo"},
                new String[]{Configuracion.getEMP_CODIGO(), this.Cod_Sucursal, this.Cod_Perfil},
                new String[]{"Men_Codigo"});
        String[][] rs = this.getConexion.getDescripcionesRow(consulta);
        if (rs[0][0] != null) {
            Object[] datos = new Object[7];
            for (String[] resu : rs) {
                datos[0] = resu[0];
                datos[1] = resu[1];
                datos[2] = "1".equals(resu[2]);
                datos[3] = "1".equals(resu[3]);
                datos[4] = "1".equals(resu[4]);
                datos[5] = "1".equals(resu[5]);
                datos[6] = "1".equals(resu[6]);
                ModeloPermisos.addRow(datos);
            }
            return true;
        }
        return false;
    }

    private boolean CargarMenus() {
        this.ModeloMenus.setRowCount(0);
        String consulta = "SELECT Men_Codigo,Men_Descrip FROM Acc_Menus ";
        consulta += "WHERE " + EMP_CODIGO + "='" + Configuracion.getEMP_CODIGO() + "' and Men_Codigo NOT IN (SELECT Men_Codigo ";
        consulta += "FROM Acc_Principal WHERE " + EMP_CODIGO + "='" + Configuracion.getEMP_CODIGO() + "'";
        consulta += " AND " + SUC_CODIGO + "='" + this.Cod_Sucursal + "' AND Perf_Codigo='" + this.Cod_Perfil + "')";
        String[][] rs = this.getConexion.getDescripcionesRow(consulta);
        if (rs[0][0] != null) {
            Object[] datos = new Object[3];
            for (String[] resu : rs) {
                datos[0] = resu[0];
                datos[1] = resu[1];
                datos[2] = false;
                ModeloMenus.addRow(datos);
            }
            return true;
        }
        return false;
    }

    private void pasarMenus() {
        int cantidadRow = this.ModeloMenus.getRowCount();
        for (int i = 0; i < cantidadRow; i++) {
            if (this.jTableMenus.getValueAt(i, 2).toString().equals("true")) {
                Object[] datos = new Object[7];
                datos[0] = this.ModeloMenus.getValueAt(i, 0);
                datos[1] = this.ModeloMenus.getValueAt(i, 1);
                datos[2] = false;
                datos[3] = false;
                datos[4] = false;
                datos[5] = false;
                datos[6] = false;
                ModeloPermisos.addRow(datos);
                ModeloMenus.setValueAt("", i, 0);
            }
        }
        for (int i = cantidadRow - 1; i >= 0; i--) {
            if ("".equals(ModeloMenus.getValueAt(i, 0))) {
                ClaseTable.removeRowjTable(jTableMenus, i);
            }
        }
    }

    private ArrayList ObtenerListaSucursal() {
        ArrayList<claseSucursal> lista = new ArrayList<>();
        String[][] rs = getConexion.getDescripcionesRow("Adm_Sucursales",
                new String[]{"Suc_Codigo", "denominacion"},
                new String[]{EMP_CODIGO},
                new String[]{Configuracion.getEMP_CODIGO()});
        if (rs[0][0] != null) {
            for (String[] resu : rs) {
                claseSucursal combo = new claseSucursal(resu[0], resu[1]);
                lista.add(combo);
            }
        }
        return lista;
    }

    private ArrayList ObtenerListaPerfil() {
        ArrayList<clasePerfiles> lista = new ArrayList<>();
        String[][] rs = getConexion.getDescripcionesRow("Acc_Perfiles",
                new String[]{"Perf_Codigo", "Perf_Descrip"},
                new String[]{EMP_CODIGO},
                new String[]{Configuracion.getEMP_CODIGO()});
        if (rs[0][0] != null) {
            for (String[] resu : rs) {
                clasePerfiles combo = new clasePerfiles(resu[0], resu[1]);
                lista.add(combo);
            }
        }
        return lista;
    }

    private class claseSucursal {

        private String Codigo;
        private String Descripcion;

        public claseSucursal(String codigo, String descripcion) {
            this.Codigo = codigo;
            this.Descripcion = descripcion;
        }

        public String getDescripcion() {
            return Descripcion;
        }

        public void setDescripcion(String descripcion) {
            this.Descripcion = descripcion;
        }

        public String getCodigo() {
            return Codigo;
        }

        public void setCodigo(String codigo) {
            this.Codigo = codigo;
        }

        @Override
        public String toString() {
            return Codigo + " - " + Descripcion;
        }
    }

    private class clasePerfiles {

        private String Codigo;
        private String Descripcion;

        public clasePerfiles(String codigo, String descripcion) {
            this.Codigo = codigo;
            this.Descripcion = descripcion;
        }

        public String getDescripcion() {
            return Descripcion;
        }

        public void setDescripcion(String descripcion) {
            this.Descripcion = descripcion;
        }

        public String getCodigo() {
            return Codigo;
        }

        public void setCodigo(String codigo) {
            this.Codigo = codigo;
        }

        @Override
        public String toString() {
            return Codigo + " - " + Descripcion;
        }
    }
}
