package com.app.form.Especiales;

import com.app.clases.utilidades.Excel;
import com.app.clases.ClaseBotones;
import com.app.clases.ClaseTeclas;
import com.app.clases.ClaseUtilidades;
import com.app.clases.GenerarReportes;
import com.app.config.Configuracion;
import com.app.config.ConsultaSQL;
import com.app.config.MensajeSistema;
import java.io.File;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

/**
 *
 * @author diego
 */
public final class frm_listados extends frm_Padre {

    GenerarReportes reportes = new GenerarReportes();

    public frm_listados(int cod_ventana) {
        initComponents();
        this.setName("frm_listado");
        this.cargarCombos();
        this.cargarTablas();
        ClaseBotones.botonesReporte(btnReporNuevo, btnReporPantalla, btnReporImpresora, btnReporExportar, btnReporCancelar, btnReporSalir);
        this.Inicializar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelPrincipal = new javax.swing.JPanel();
        jPanelTitulo = new javax.swing.JPanel();
        textTitulo = new javax.swing.JLabel();
        jPanelBotones = new javax.swing.JPanel();
        btnReporNuevo = new com.app.botones.btnNuevo();
        btnReporPantalla = new com.app.botones.btnPantalla();
        btnReporImpresora = new com.app.botones.btnImpresora();
        btnReporCancelar = new com.app.botones.btnCancelar();
        btnReporSalir = new com.app.botones.btnSalir();
        btnReporExportar = new com.app.botones.btnExportar();
        jPanelTablas = new javax.swing.JPanel();
        jPanelCodigo = new javax.swing.JPanel();
        txtCodDesde = new com.app.paleta.txtNumeros();
        txtCodHasta = new com.app.paleta.txtNumeros();
        jPanelLike = new javax.swing.JPanel();
        txtLike = new com.app.paleta.txtTexto();
        jPanelOrden = new javax.swing.JPanel();
        cboOrden = new javax.swing.JComboBox();
        CheckOrden = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox();
        jPanelLimite = new javax.swing.JPanel();
        txtLimite = new com.app.paleta.txtNumeros();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jPanelPrincipal.setPreferredSize(new java.awt.Dimension(830, 590));

        jPanelTitulo.setBackground(new java.awt.Color(204, 204, 204));
        jPanelTitulo.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanelTitulo.setMaximumSize(new java.awt.Dimension(486, 60));
        jPanelTitulo.setMinimumSize(new java.awt.Dimension(486, 60));
        jPanelTitulo.setName(""); // NOI18N
        jPanelTitulo.setPreferredSize(new java.awt.Dimension(486, 60));

        textTitulo.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        textTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        textTitulo.setText("Modulo de Consultas de listados");

        javax.swing.GroupLayout jPanelTituloLayout = new javax.swing.GroupLayout(jPanelTitulo);
        jPanelTitulo.setLayout(jPanelTituloLayout);
        jPanelTituloLayout.setHorizontalGroup(
            jPanelTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTituloLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelTituloLayout.setVerticalGroup(
            jPanelTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTituloLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanelBotones.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnReporNuevo.setMaximumSize(new java.awt.Dimension(99, 30));
        btnReporNuevo.setMinimumSize(new java.awt.Dimension(99, 30));
        btnReporNuevo.setPreferredSize(new java.awt.Dimension(88, 30));
        btnReporNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReporNuevoActionPerformed(evt);
            }
        });

        btnReporPantalla.setPreferredSize(new java.awt.Dimension(88, 30));
        btnReporPantalla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReporPantallaActionPerformed(evt);
            }
        });

        btnReporImpresora.setMaximumSize(new java.awt.Dimension(120, 30));
        btnReporImpresora.setMinimumSize(new java.awt.Dimension(120, 30));
        btnReporImpresora.setPreferredSize(new java.awt.Dimension(88, 30));
        btnReporImpresora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReporImpresoraActionPerformed(evt);
            }
        });

        btnReporCancelar.setMaximumSize(new java.awt.Dimension(102, 30));
        btnReporCancelar.setMinimumSize(new java.awt.Dimension(102, 30));
        btnReporCancelar.setPreferredSize(new java.awt.Dimension(88, 30));
        btnReporCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReporCancelarActionPerformed(evt);
            }
        });

        btnReporSalir.setMaximumSize(new java.awt.Dimension(86, 30));
        btnReporSalir.setMinimumSize(new java.awt.Dimension(86, 30));
        btnReporSalir.setPreferredSize(new java.awt.Dimension(88, 30));
        btnReporSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReporSalirActionPerformed(evt);
            }
        });

        btnReporExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReporExportarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelBotonesLayout = new javax.swing.GroupLayout(jPanelBotones);
        jPanelBotones.setLayout(jPanelBotonesLayout);
        jPanelBotonesLayout.setHorizontalGroup(
            jPanelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBotonesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnReporNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnReporPantalla, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnReporImpresora, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnReporExportar, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnReporCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnReporSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelBotonesLayout.setVerticalGroup(
            jPanelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBotonesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReporNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnReporPantalla, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnReporImpresora, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnReporCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReporSalir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReporExportar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanelTablas.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanelCodigo.setBorder(javax.swing.BorderFactory.createTitledBorder("Codigo: Desde - Hasta"));

        txtCodDesde.setText("");
        txtCodDesde.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodDesdeKeyPressed(evt);
            }
        });

        txtCodHasta.setText("");
        txtCodHasta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodHastaKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanelCodigoLayout = new javax.swing.GroupLayout(jPanelCodigo);
        jPanelCodigo.setLayout(jPanelCodigoLayout);
        jPanelCodigoLayout.setHorizontalGroup(
            jPanelCodigoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCodigoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCodigoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCodDesde, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtCodHasta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelCodigoLayout.setVerticalGroup(
            jPanelCodigoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCodigoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtCodDesde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCodHasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelLike.setBorder(javax.swing.BorderFactory.createTitledBorder("Filtrar por Descripción"));

        txtLike.setText("");
        txtLike.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtLikeKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanelLikeLayout = new javax.swing.GroupLayout(jPanelLike);
        jPanelLike.setLayout(jPanelLikeLayout);
        jPanelLikeLayout.setHorizontalGroup(
            jPanelLikeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLikeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtLike, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelLikeLayout.setVerticalGroup(
            jPanelLikeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLikeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtLike, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelOrden.setBorder(javax.swing.BorderFactory.createTitledBorder("Ordenar Por."));

        cboOrden.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cboOrdenFocusGained(evt);
            }
        });
        cboOrden.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cboOrdenKeyPressed(evt);
            }
        });

        CheckOrden.setText("Descendente?");
        CheckOrden.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CheckOrdenKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanelOrdenLayout = new javax.swing.GroupLayout(jPanelOrden);
        jPanelOrden.setLayout(jPanelOrdenLayout);
        jPanelOrdenLayout.setHorizontalGroup(
            jPanelOrdenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOrdenLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelOrdenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cboOrden, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelOrdenLayout.createSequentialGroup()
                        .addComponent(CheckOrden)
                        .addGap(0, 54, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelOrdenLayout.setVerticalGroup(
            jPanelOrdenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOrdenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cboOrden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(CheckOrden)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Tablas"));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBox1FocusGained(evt);
            }
        });
        jComboBox1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox1KeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanelLimite.setBorder(javax.swing.BorderFactory.createTitledBorder("Limite..."));

        txtLimite.setText("");
        txtLimite.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtLimiteKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanelLimiteLayout = new javax.swing.GroupLayout(jPanelLimite);
        jPanelLimite.setLayout(jPanelLimiteLayout);
        jPanelLimiteLayout.setHorizontalGroup(
            jPanelLimiteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLimiteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtLimite, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelLimiteLayout.setVerticalGroup(
            jPanelLimiteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLimiteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtLimite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelTablasLayout = new javax.swing.GroupLayout(jPanelTablas);
        jPanelTablas.setLayout(jPanelTablasLayout);
        jPanelTablasLayout.setHorizontalGroup(
            jPanelTablasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTablasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelTablasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelCodigo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelTablasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelTablasLayout.createSequentialGroup()
                        .addComponent(jPanelLike, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelLimite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanelOrden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelTablasLayout.setVerticalGroup(
            jPanelTablasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTablasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelTablasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelTablasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanelLike, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanelLimite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(jPanelTablasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelCodigo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelOrden, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelPrincipalLayout = new javax.swing.GroupLayout(jPanelPrincipal);
        jPanelPrincipal.setLayout(jPanelPrincipalLayout);
        jPanelPrincipalLayout.setHorizontalGroup(
            jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanelBotones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelTablas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelTitulo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 582, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelPrincipalLayout.setVerticalGroup(
            jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelTablas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelBotones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 602, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtLikeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLikeKeyPressed
        if (evt.getKeyCode() == ClaseTeclas.VK_ENTER()) {
            this.cboOrden.grabFocus();
        }
    }//GEN-LAST:event_txtLikeKeyPressed

    private void txtCodDesdeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodDesdeKeyPressed
        if (evt.getKeyCode() == ClaseTeclas.VK_ENTER()) {
            if (this.txtCodDesde.getNumeroInt() > 0) {
                this.txtCodHasta.setEnabled(true);
                this.txtCodHasta.grabFocus();
            } else {
                this.txtLike.grabFocus();
            }
        }
    }//GEN-LAST:event_txtCodDesdeKeyPressed

    private void txtCodHastaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodHastaKeyPressed
        if (evt.getKeyCode() == ClaseTeclas.VK_ENTER()) {
            if (this.txtCodHasta.getNumeroInt() <= 0 && this.txtCodDesde.getNumeroInt() > 0) {
                if (MensajeSistema.CampoVacio(this)) {
                    this.txtCodHasta.grabFocus();
                } else {
                    this.Inicializar();
                }
            } else {
                if (this.txtCodHasta.getNumeroInt() < this.txtCodDesde.getNumeroInt()) {
                    MensajeSistema.MensajeVarios(this, "El HASTA debe ser Mayor o Igual que el DESDE...", MensajeSistema.ERROR_MESSAGE());
                    this.txtCodHasta.setNumero(this.txtCodDesde.getNumeroInt() + 1);
                    this.txtCodHasta.grabFocus();
                } else {
                    this.txtLike.grabFocus();
                }
            }
        }
    }//GEN-LAST:event_txtCodHastaKeyPressed

    private void cboOrdenKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cboOrdenKeyPressed
        if (evt.getKeyCode() == ClaseTeclas.VK_ENTER()) {
            if (this.cboOrden.getSelectedIndex() > 0) {
                this.CheckOrden.setEnabled(true);
            }
            this.txtLimite.grabFocus();
        }
    }//GEN-LAST:event_cboOrdenKeyPressed

    private void cboOrdenFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cboOrdenFocusGained
        this.cboOrden.setPopupVisible(true);
    }//GEN-LAST:event_cboOrdenFocusGained

    private void txtLimiteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLimiteKeyPressed
        if (evt.getKeyCode() == ClaseTeclas.VK_ENTER()) {
            this.btnReporPantalla.grabFocus();
        }
    }//GEN-LAST:event_txtLimiteKeyPressed

    private void CheckOrdenKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CheckOrdenKeyPressed
        if (evt.getKeyCode() == ClaseTeclas.VK_ENTER()) {
            this.txtLimite.grabFocus();
        }
    }//GEN-LAST:event_CheckOrdenKeyPressed

    private void btnReporExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReporExportarActionPerformed
        this.Reporte('E');
    }//GEN-LAST:event_btnReporExportarActionPerformed

    private void btnReporSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReporSalirActionPerformed
        this.Salir(this);
    }//GEN-LAST:event_btnReporSalirActionPerformed

    private void btnReporCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReporCancelarActionPerformed
        this.Inicializar();
    }//GEN-LAST:event_btnReporCancelarActionPerformed

    private void btnReporImpresoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReporImpresoraActionPerformed
        this.Reporte('I');
    }//GEN-LAST:event_btnReporImpresoraActionPerformed

    private void btnReporPantallaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReporPantallaActionPerformed
        this.Reporte('P');
    }//GEN-LAST:event_btnReporPantallaActionPerformed

    private void btnReporNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReporNuevoActionPerformed
        this.Agregar();
    }//GEN-LAST:event_btnReporNuevoActionPerformed

    private void jComboBox1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox1KeyPressed
        if (evt.getKeyCode() == ClaseTeclas.VK_ENTER()) {
            if (this.jComboBox1.getSelectedIndex() == 0) {
                MensajeSistema.MensajeVarios(this, "Seleccione alguna de las opciones para continuar...", MensajeSistema.ERROR_MESSAGE());
                this.jComboBox1.setSelectedIndex(1);
                this.jComboBox1.grabFocus();
            } else {
                this.cargarCamposdeTablas(this.jComboBox1.getSelectedItem().toString());
                this.habilitar();
            }
        }
    }//GEN-LAST:event_jComboBox1KeyPressed

    private void jComboBox1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox1FocusGained
        this.jComboBox1.setPopupVisible(true);
    }//GEN-LAST:event_jComboBox1FocusGained

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox CheckOrden;
    private com.app.botones.btnCancelar btnReporCancelar;
    private com.app.botones.btnExportar btnReporExportar;
    private com.app.botones.btnImpresora btnReporImpresora;
    private com.app.botones.btnNuevo btnReporNuevo;
    private com.app.botones.btnPantalla btnReporPantalla;
    private com.app.botones.btnSalir btnReporSalir;
    private javax.swing.JComboBox cboOrden;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelBotones;
    private javax.swing.JPanel jPanelCodigo;
    private javax.swing.JPanel jPanelLike;
    private javax.swing.JPanel jPanelLimite;
    private javax.swing.JPanel jPanelOrden;
    private javax.swing.JPanel jPanelPrincipal;
    private javax.swing.JPanel jPanelTablas;
    private javax.swing.JPanel jPanelTitulo;
    private javax.swing.JLabel textTitulo;
    private com.app.paleta.txtNumeros txtCodDesde;
    private com.app.paleta.txtNumeros txtCodHasta;
    private com.app.paleta.txtTexto txtLike;
    private com.app.paleta.txtNumeros txtLimite;
    // End of variables declaration//GEN-END:variables

    private void Inicializar() {
        this.txtCodDesde.setText("");
        this.txtCodHasta.setText("");
        this.txtLike.setText("");
        this.CheckOrden.setSelected(false);
        this.cboOrden.setSelectedIndex(0);
        this.txtLimite.setText("");
        this.jComboBox1.setSelectedIndex(0);
        this.modoEdicion(false);
        this.btnReporNuevo.grabFocus();
    }

    private void modoEdicion(boolean val) {
        this.btnReporNuevo.setEnabled(!val);
        this.btnReporPantalla.setEnabled(val);
        this.btnReporImpresora.setEnabled(val);
        this.btnReporExportar.setEnabled(val);
        this.btnReporCancelar.setEnabled(val);
        this.btnReporSalir.setEnabled(!val);
        this.txtCodDesde.setEnabled(val);
        this.txtCodHasta.setEnabled(val);
        this.txtLike.setEnabled(val);
        this.cboOrden.setEnabled(val);
        this.jComboBox1.setEnabled(val);
        this.CheckOrden.setEnabled(false);
        this.txtLimite.setEnabled(val);
    }

    private void Agregar() {
        this.modoEdicion(true);
        this.btnReporPantalla.setEnabled(false);
        this.btnReporImpresora.setEnabled(false);
        this.btnReporExportar.setEnabled(false);
        this.jComboBox1.grabFocus();
    }

    private void habilitar() {
        this.btnReporPantalla.setEnabled(true);
        this.btnReporImpresora.setEnabled(true);
        this.btnReporExportar.setEnabled(true);
        this.txtCodDesde.grabFocus();
    }

    private void cargarCombos() {
        this.cboOrden.addItem("Seleccione...");
        this.cboOrden.addItem("Código");
        this.cboOrden.addItem("Descripción");
    }

    public void Reporte(char modalidad) {
        try {
            ResultSet resu = traerDatos();
            if (resu.next()) {
                if (modalidad == 'E') {
                    resu.beforeFirst();
                    //String dir = new Clases.App.jFileChooser().SeleccionarDirectorio(this, ClaseUtilidades.getDirectorioTrabajo());
                    Excel excel = new Excel();
                    String dir = ClaseUtilidades.getDirectorioTrabajo() + ClaseUtilidades.getSeparator();
                    excel.export(getConexion.getDefaultTableModel(resu),
                            new File(dir + this.tituloVentanaActual + ".xls"),
                            this.tituloVentanaActual);
                    this.Inicializar();
                    System.out.println(dir + this.tablaConsutada + ".xls");
                    excel.AbrirExcel(dir + this.tablaConsutada + ".xls");
                } else {
                    String xdesde = this.txtCodDesde.getNumeroInt() == 0 ? "el principio" : this.txtCodDesde.getText();
                    String xhasta = this.txtCodHasta.getNumeroInt() == 0 ? "el final" : this.txtCodHasta.getText();
                    this.Inicializar();
                    reportes.listadoDosCampos(resu, tituloVentanaActual, xdesde, xhasta, modalidad);
                }
            } else {
                if(MensajeSistema.ConsultaSQLVacio(this)){
                 this.Inicializar();
                 this.btnReporNuevo.doClick();
                }else{
                Inicializar();
                }
            }
        } catch (SQLException ex) {
            MensajeSistema.setSQLException(ex);
        }
    }

    private ResultSet traerDatos() {
        String sql = ConsultaSQL.getSelect(tablaConsutada,
                new String[]{idConsultada, descripcionConsultada},
                new String[]{"codigo", "descripcion"});
        // Para quitar el ";" de la consulta que retorna el Metodo anterior
        sql = sql.substring(0, sql.length() - 1);
        sql += " WHERE " + EMP_CODIGO + "=" + Configuracion.getEMP_CODIGO()+ " ";
        String where = "";
        if (!this.txtCodDesde.isEmpty() || !this.txtCodHasta.isEmpty()) {
            where += idConsultada + ">='" + this.txtCodDesde.getText().trim() + "'";
            where += " AND " + idConsultada + "<='" + this.txtCodHasta.getText().trim() + "'";
        }
        if (!where.isEmpty()) {
            sql += "AND " + where + " ";
        }
        String like = "";
        if (!this.txtLike.isEmpty()) {
            like += "UPPER(" + descripcionConsultada + ") LIKE ('%" + this.txtLike.getText().trim().toUpperCase() + "%') ";
        }
        if (!like.isEmpty()) {
            sql += "AND " + like + " ";
        }
        if (cboOrden.getSelectedIndex() > 0) {
            sql += "ORDER BY ";
            sql += this.cboOrden.getSelectedIndex() == 1 ? idConsultada : descripcionConsultada;
            sql += " ";
            if (this.CheckOrden.isSelected()) {
                sql += "DESC ";
            }
        }
        if (!this.txtLimite.isEmpty()) {
            sql += "LIMIT " + this.txtLimite.getNumeroInt();
        }
        return getConexion.ejecutaQuery(sql + ";");
    }

    private ArrayList getTablas() {
        ArrayList list = new ArrayList();
        list.add("Bancos");
        list.add("Ciudades");
        list.add("Drogas");
        list.add("Envaces");
        list.add("Forma_Pago");
        list.add("Lineas");
        list.add("Marcas");
        list.add("Nacionalidades");
        list.add("Sexo");
        list.add("Tipo_Factura");
        list.add("Tipo_Documento");
        list.add("Tipo_Producto");
        return list;
    }

    private void cargarTablas() {
        this.jComboBox1.removeAllItems();
        this.jComboBox1.addItem("Seleccione...");
        ArrayList list = getTablas();
        for (int i = 0; i < list.size(); i++) {
            this.jComboBox1.addItem(list.get(i));
        }
    }

    private void cargarCamposdeTablas(String tabla) {
        String sql = "SELECT * FROM ref_" + tabla + ";";
        try {
            ResultSet rs = getConexion.ejecutaQuery(sql);
            tablaConsutada = "ref_" + tabla;
            tituloVentanaActual = tabla;
            idConsultada = rs.getMetaData().getColumnName(2);
            descripcionConsultada = rs.getMetaData().getColumnName(3);
        } catch (SQLException ex) {
            MensajeSistema.setSQLException(ex);
        }
    }
}
