package com.app.form.Especiales;

import com.app.clases.utilidades.Excel;
import com.app.clases.ClaseFecha;
import com.app.clases.GenerarReportes;
import com.app.config.Configuracion;
import com.app.config.ConsultaSQL;
import com.app.config.MensajeSistema;
import java.awt.event.ActionEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;

/**
 *
 * @author Diego
 */
public class Listar_Fecha extends frm_Padre {

    private final GenerarReportes reportes = new GenerarReportes();
    private final String Reporte;
    private final String[] campos;
    private final String[] nombres;

    /**
     * Listar para tres campos CON Campo Foraneo
     *
     * @param tabla
     * @param cod_ventana
     * @param Empresa
     * @param Sucursal
     * @param CampoFecha
     * @param titulo
     * @param reporte
     * @param campos
     * @param nombres
     */
    public Listar_Fecha(String tabla, int cod_ventana, boolean Empresa, boolean Sucursal, String CampoFecha, String titulo,
            String reporte, String[] campos, String[] nombres) {
        initComponents();
        this.setName("listar" + titulo);
        this.tablaConsutada = tabla;
        this.UsarEmpresa = Empresa;
        this.UsarSucursal = Sucursal;
        this.idConsultada = CampoFecha;
        this.tituloVentanaActual = titulo;
        this.Reporte = reporte;
        this.campos = campos;
        this.nombres = nombres;
        this.textTitulo.setText("Listado de " + tituloVentanaActual + "...");
        this.pnlListar.addListener(this);
        this.getPermisosListar(cod_ventana);
        this.Inicializar();
    }
    
    @Override
    public void actionPerformed(ActionEvent e) {
        String Orden = e.getActionCommand();        
        if (Orden.compareTo("btn1") == 0) {
            Agregar();
        } else if (Orden.compareTo("btn2") == 0) {
            this.Reporte('P');
        } else if (Orden.compareTo("btn3") == 0) {
            this.Reporte('I');
        } else if (Orden.compareTo("btn4") == 0) {
            this.Reporte('E');
        } else if (Orden.compareTo("btn5") == 0) {
            if (MensajeSistema.Cancelar(this)) {
                this.Inicializar();
            }
        } else if (Orden.compareTo("btn6") == 0) {
            Salir(this);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanelTitulo = new javax.swing.JPanel();
        textTitulo = new javax.swing.JLabel();
        jPanelDatos = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtFecha1 = new com.app.paleta.txtFecha();
        txtFecha2 = new com.app.paleta.txtFecha();
        pnlListar = new com.app.botones.pnlListar();

        jPanelTitulo.setBackground(new java.awt.Color(204, 204, 204));
        jPanelTitulo.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanelTitulo.setMaximumSize(new java.awt.Dimension(552, 60));
        jPanelTitulo.setMinimumSize(new java.awt.Dimension(552, 60));
        jPanelTitulo.setName(""); // NOI18N
        jPanelTitulo.setPreferredSize(new java.awt.Dimension(552, 60));

        textTitulo.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        textTitulo.setText("TITULO...");

        javax.swing.GroupLayout jPanelTituloLayout = new javax.swing.GroupLayout(jPanelTitulo);
        jPanelTitulo.setLayout(jPanelTituloLayout);
        jPanelTituloLayout.setHorizontalGroup(
            jPanelTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTituloLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanelTituloLayout.setVerticalGroup(
            jPanelTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTituloLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanelDatos.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Desde:");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Hasta:");

        txtFecha1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFecha1ActionPerformed(evt);
            }
        });

        txtFecha2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFecha2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelDatosLayout = new javax.swing.GroupLayout(jPanelDatos);
        jPanelDatos.setLayout(jPanelDatosLayout);
        jPanelDatosLayout.setHorizontalGroup(
            jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDatosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtFecha1, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                    .addComponent(txtFecha2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(331, Short.MAX_VALUE))
        );
        jPanelDatosLayout.setVerticalGroup(
            jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDatosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtFecha1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtFecha2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanelDatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 534, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnlListar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelDatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlListar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtFecha1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFecha1ActionPerformed
        int valor = this.txtFecha1.verificarVacioConMsj();
        if (valor == 0) {
            this.txtFecha2.setFechaActual();
            this.txtFecha2.grabFocus();
        } else {
            this.Inicializar();
        }
    }//GEN-LAST:event_txtFecha1ActionPerformed

    private void txtFecha2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFecha2ActionPerformed
        int valor = this.txtFecha2.verificarVacioConMsj();
        if (valor == 0) {
            Date fec1 = this.txtFecha1.getFechaD();
            Date fec2 = this.txtFecha2.getFechaD();
            if (ClaseFecha.getDiferenciasDeFechas(fec1, fec2) < 0) {
                MensajeSistema.MensajeVarios(this, "La fecha Desde no puede ser menor a la fecha Hasta", MensajeSistema.ERROR_MESSAGE());
                this.txtFecha1.setText("");
                this.txtFecha2.setText("");
                this.txtFecha1.grabFocus();
            } else {
                this.txtFecha2.grabFocus();
            }
        } else {
            this.Inicializar();
        }
    }//GEN-LAST:event_txtFecha2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelDatos;
    private javax.swing.JPanel jPanelTitulo;
    private com.app.botones.pnlListar pnlListar;
    private javax.swing.JLabel textTitulo;
    private com.app.paleta.txtFecha txtFecha1;
    private com.app.paleta.txtFecha txtFecha2;
    // End of variables declaration//GEN-END:variables

    private void Inicializar() {
        this.txtFecha1.setText("");
        this.txtFecha2.setText("");
        ModoEdicion(false);
        if (this.Listar_OK == false) {
            this.pnlListar.btnNuevo.setEnabled(Listar_OK);
        }
        this.pnlListar.btnNuevo.grabFocus();
    }

    private void ModoEdicion(boolean x) {
        this.txtFecha1.setEnabled(x);
        this.txtFecha2.setEnabled(x);
        this.pnlListar.btnNuevo.setEnabled(!x);
        this.pnlListar.btnPantalla.setEnabled(x);
        this.pnlListar.btnImpresora.setEnabled(x);
        this.pnlListar.btnExportar.setEnabled(x);
        this.pnlListar.btnCancelar.setEnabled(x);
        this.pnlListar.btnSalir.setEnabled(!x);
    }

    public void Agregar() {
        operacion = 'A';
        this.ModoEdicion(true);
        this.pnlListar.btnPantalla.setEnabled(false);
        this.pnlListar.btnImpresora.setEnabled(false);
        this.txtFecha1.setText("01/" + ClaseFecha.getMonth() + "/" + ClaseFecha.getYear());
        this.txtFecha1.grabFocus();
    }

    public void Reporte(char modalidad) {
        try {
            ResultSet resu = traerDatos();
            if (resu.next()) {
                if (modalidad == 'E') {
                    resu.beforeFirst();
                    Excel excel = new Excel();
                    excel.export(getConexion.getDefaultTableModel(resu), this.tituloVentanaActual);
                    if (MensajeSistema.Pregunta_YES_NO(this, "Desea abrir el archivo exportado???") == 0) {
                        excel.AbrirUltimo();
                    }
                    this.Inicializar();
                } else {
                    String xdesde = this.txtFecha1.getText();
                    String xhasta = this.txtFecha2.getText();
                    Inicializar();
                    reportes.mostrarReporteVentana(resu, frm_Padre.ubicacionReport + this.Reporte, xdesde, xhasta, modalidad, tituloVentanaActual);
                }
            } else {
                if (MensajeSistema.ConsultaSQLVacio(this)) {
                    this.txtFecha1.setText("");
                    this.txtFecha2.setText("");
                    this.txtFecha1.grabFocus();
                } else {
                    Inicializar();
                }
            }
        } catch (SQLException ex) {
            MensajeSistema.setSQLException(ex);
        }
    }

    private ResultSet traerDatos() {
        String consulta;
        if (UsarEmpresa && UsarSucursal) {
            String[] campoCondicion = {cod_empresa, cod_sucursal, idConsultada, idConsultada};
            String[] igual = {"=", "=", ">=", "<="};
            String[] valores = {Configuracion.getCOD_EMPRESA(), Configuracion.getCOD_SUCURSAL(), this.txtFecha1.getFecha(), this.txtFecha2.getFecha()};
            String[] ordenBy = {descripcionConsultada, idConsultada};
            consulta = ConsultaSQL.getSelect(tablaConsutada, campos, nombres, campoCondicion,
                    igual, valores, ordenBy);
        } else if (UsarEmpresa) {
            String[] campoCondicion = {cod_empresa, idConsultada, idConsultada};
            String[] igual = {"=", ">=", "<="};
            String[] valores = {Configuracion.getCOD_EMPRESA(), this.txtFecha1.getFecha(), this.txtFecha2.getFecha()};
            String[] ordenBy = {descripcionConsultada, idConsultada};
            consulta = ConsultaSQL.getSelect(tablaConsutada, campos, nombres, campoCondicion,
                    igual, valores, ordenBy);
        } else {
            String[] campoCondicion = {idConsultada, idConsultada};
            String[] igual = {">=", "<="};
            String[] valores = {this.txtFecha1.getFecha(), this.txtFecha2.getFecha()};
            String[] ordenBy = {descripcionConsultada, idConsultada};
            consulta = ConsultaSQL.getSelect(tablaConsutada, campos, nombres, campoCondicion,
                    igual, valores, ordenBy);
        }
        return getConexion.ejecutaQuery(consulta);
    }
}
