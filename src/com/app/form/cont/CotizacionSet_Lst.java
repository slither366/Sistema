package com.app.form.cont;

import com.app.form.Especiales.frm_Padre;
import com.app.clases.utilidades.Excel;
import com.app.clases.ClaseFecha;
import com.app.clases.ClaseTeclas;
import com.app.clases.GenerarReportes;
import com.app.config.Configuracion;
import com.app.config.ConsultaSQL;
import com.app.config.MensajeSistema;
import java.awt.event.ActionEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import java.util.HashMap;
import net.sf.jasperreports.engine.JRResultSetDataSource;

/**
 *
 * @author Diego
 */
public class CotizacionSet_Lst extends frm_Padre {

    private final GenerarReportes reportes = new GenerarReportes();
    private final String Reporte;

    /**
     * @param cod_ventana
     */
    public CotizacionSet_Lst(int cod_ventana) {
        initComponents();
        this.setName("CotizacionSet_Lst");
        this.tablaConsutada = "vst_cont_cotizacion_set";
        this.UsarEmpresa = true;
        this.UsarSucursal = false;
        this.idConsultada = "fecha";
        this.tituloVentanaActual = "Cotizaci√≥n";
        this.Reporte = "cotizacionSet_Lst";
        this.panelTitulo1.setTextTitulo("Listado de " + tituloVentanaActual + "...");
        this.txtCod_Moneda.setBdTabla("ref_monedas");
        this.txtCod_Moneda.setBdCodigo("Mon_Codigo");
        this.txtCod_Moneda.setBdDescrip("Mon_Descrip");
        this.txtCod_Moneda.setBdTitulo("Monedas");
        this.pnlListar.addListener(this);
        this.getPermisosListar(cod_ventana);
        this.Inicializar();
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        String Orden = e.getActionCommand();
        if (Orden.compareTo("btn1") == 0) {
            Agregar();
        } else if (Orden.compareTo("btn2") == 0) {
            this.Reporte('P');
        } else if (Orden.compareTo("btn3") == 0) {
            this.Reporte('I');
        } else if (Orden.compareTo("btn4") == 0) {
            this.Reporte('E');
        } else if (Orden.compareTo("btn5") == 0) {
            if (MensajeSistema.Cancelar(this)) {
                this.Inicializar();
            }
        } else if (Orden.compareTo("btn6") == 0) {
            Salir(this);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanelDatos = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtCod_Moneda = new com.app.paleta.txtCodigo();
        lblMoneda = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtFecha1 = new com.app.paleta.txtFecha();
        jLabel2 = new javax.swing.JLabel();
        txtFecha2 = new com.app.paleta.txtFecha();
        pnlListar = new com.app.botones.pnlListar();
        panelTitulo1 = new com.app.paleta.panelTitulo();

        jPanelDatos.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Moneda");

        txtCod_Moneda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCod_MonedaActionPerformed(evt);
            }
        });
        txtCod_Moneda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCod_MonedaKeyPressed(evt);
            }
        });

        lblMoneda.setText("text");

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Desde:");

        txtFecha1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFecha1ActionPerformed(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Hasta:");

        txtFecha2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFecha2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelDatosLayout = new javax.swing.GroupLayout(jPanelDatos);
        jPanelDatos.setLayout(jPanelDatosLayout);
        jPanelDatosLayout.setHorizontalGroup(
            jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDatosLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtCod_Moneda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtFecha1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtFecha2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblMoneda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelDatosLayout.setVerticalGroup(
            jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDatosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtCod_Moneda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMoneda))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtFecha1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtFecha2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelTitulo1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(pnlListar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanelDatos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelTitulo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelDatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlListar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtFecha1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFecha1ActionPerformed
        int valor = this.txtFecha1.verificarVacioConMsj();
        if (valor == 0) {
            this.txtFecha2.setFechaActual();
            this.txtFecha2.grabFocus();
        } else {
            this.Inicializar();
        }
    }//GEN-LAST:event_txtFecha1ActionPerformed

    private void txtFecha2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFecha2ActionPerformed
        int valor = this.txtFecha2.verificarVacioConMsj();
        if (valor == 0) {
            Date fec1 = this.txtFecha1.getFechaD();
            Date fec2 = this.txtFecha2.getFechaD();
            if (ClaseFecha.getDiferenciasDeFechas(fec1, fec2) < 0) {
                MensajeSistema.MensajeVarios(this, "La fecha Desde no puede ser menor a la fecha Hasta", MensajeSistema.ERROR_MESSAGE());
                this.txtFecha1.setText("");
                this.txtFecha2.setText("");
                this.txtFecha1.grabFocus();
            } else {
                this.txtFecha2.grabFocus();
            }
        } else {
            this.Inicializar();
        }
    }//GEN-LAST:event_txtFecha2ActionPerformed

    private void txtCod_MonedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCod_MonedaActionPerformed
        if (this.txtCod_Moneda.verificarVacioSinMsj()) {
            String rs = getConexion.getDescripcion(this.txtCod_Moneda.getBdTabla(), this.txtCod_Moneda.getBdDescrip(),
                    new String[]{EMP_CODIGO, this.txtCod_Moneda.getBdCodigo()},
                    new String[]{Configuracion.getEMP_CODIGO(), this.txtCod_Moneda.getText()});
            if (rs != null) {
                this.lblMoneda.setText(rs);
                this.txtFecha1.setEnabled(true);
                this.txtFecha1.setText("01/" + ClaseFecha.getMonth() + "/" + ClaseFecha.getYear());
                this.txtFecha1.grabFocus();
            }
        } else {
            this.txtCod_Moneda.setCodigo(0);
            this.lblMoneda.setText("Todos");
            this.txtFecha1.setEnabled(true);
            this.txtFecha1.setText("01/" + ClaseFecha.getMonth() + "/" + ClaseFecha.getYear());
            this.txtFecha1.grabFocus();
        }
    }//GEN-LAST:event_txtCod_MonedaActionPerformed

    private void txtCod_MonedaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCod_MonedaKeyPressed
        if (evt.getKeyCode() == ClaseTeclas.VK_F5()) {
            Buscar(txtCod_Moneda.getBdTabla(), true, false, txtCod_Moneda.getBdCodigo(), txtCod_Moneda.getBdDescrip(), txtCod_Moneda.getBdTitulo());
            this.txtCod_Moneda.requestFocus();
        }
    }//GEN-LAST:event_txtCod_MonedaKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelDatos;
    private javax.swing.JLabel lblMoneda;
    private com.app.paleta.panelTitulo panelTitulo1;
    private com.app.botones.pnlListar pnlListar;
    private com.app.paleta.txtCodigo txtCod_Moneda;
    private com.app.paleta.txtFecha txtFecha1;
    private com.app.paleta.txtFecha txtFecha2;
    // End of variables declaration//GEN-END:variables

    private void Inicializar() {
        this.txtCod_Moneda.setText("");
        this.lblMoneda.setText("");
        this.txtFecha1.setText("");
        this.txtFecha2.setText("");
        ModoEdicion(false);
        if (this.Listar_OK == false) {
            this.pnlListar.btnNuevo.setEnabled(Listar_OK);
        }
        this.pnlListar.btnNuevo.grabFocus();
    }

    private void ModoEdicion(boolean x) {
        this.txtCod_Moneda.setEnabled(x);
        this.txtFecha1.setEnabled(x);
        this.txtFecha2.setEnabled(x);
        this.pnlListar.btnNuevo.setEnabled(!x);
        this.pnlListar.btnPantalla.setEnabled(x);
        this.pnlListar.btnImpresora.setEnabled(x);
        this.pnlListar.btnExportar.setEnabled(x);
        this.pnlListar.btnCancelar.setEnabled(x);
        this.pnlListar.btnSalir.setEnabled(!x);
    }

    public void Agregar() {
        operacion = 'A';
        this.ModoEdicion(true);
        this.pnlListar.btnPantalla.setEnabled(false);
        this.pnlListar.btnImpresora.setEnabled(false);
        this.pnlListar.btnExportar.setEnabled(false);
        this.txtCod_Moneda.grabFocus();
    }

    public void Reporte(char modalidad) {
        try {
            ResultSet resu = traerDatos();
            if (resu.next()) {
                resu.beforeFirst();
                if (modalidad == 'E') {
                    Excel excel = new Excel();
                    excel.export(getConexion.getDefaultTableModel(resu), this.tituloVentanaActual);
                    if (MensajeSistema.Pregunta_YES_NO(this, "Desea abrir el archivo exportado???") == 0) {
                        excel.AbrirUltimo();
                    }
                    this.Inicializar();
                } else {
                    JRResultSetDataSource jrRS = new JRResultSetDataSource(resu);
                    HashMap parameters = new HashMap();                    
                    parameters.put("empresa", Configuracion.getEMP_NOMBRE());
                    parameters.put("sucursal", Configuracion.getSUC_NOMBRE());
                    parameters.put("usuario", Configuracion.getUSU_NOMBRE());
                    Inicializar();
                    this.reportes.MostrarReporte(parameters, jrRS, this.Reporte, modalidad, tituloVentanaActual);
                }
            } else {
                if (MensajeSistema.ConsultaSQLVacio(this)) {
                    this.txtCod_Moneda.setText("");
                    this.lblMoneda.setText("");
                    this.txtFecha1.setText("");
                    this.txtFecha2.setText("");
                    this.txtFecha1.grabFocus();
                } else {
                    Inicializar();
                }
            }
        } catch (SQLException ex) {
            MensajeSistema.setSQLException(ex);
        }
    }

    private ResultSet traerDatos() {
        String[] campos = {this.txtCod_Moneda.getBdCodigo(), this.txtCod_Moneda.getBdDescrip(), idConsultada, "compra", "venta"};
        String[] nombres = {null, null, null, null, null};
        String[] campoCondicion = {EMP_CODIGO, this.txtCod_Moneda.getBdCodigo(), idConsultada, idConsultada};
        String[] igual = {"=", this.txtCod_Moneda.getCodigo() == 0 ? "<>" : "=", ">=", "<="};
        String[] valores = {Configuracion.getEMP_CODIGO(), this.txtCod_Moneda.getText(), this.txtFecha1.getFecha(), this.txtFecha2.getFecha()};
        String[] ordenBy = {EMP_CODIGO, this.txtCod_Moneda.getBdCodigo(), idConsultada};
        String consulta = ConsultaSQL.getSelect(tablaConsutada, campos, nombres, campoCondicion,
                igual, valores, ordenBy);
        return getConexion.ejecutaQuery(consulta);
    }
}
